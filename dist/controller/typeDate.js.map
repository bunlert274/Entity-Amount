{"version":3,"sources":["../../src/controller/typeDate.js"],"names":["moment","require","typeDate","value","unit","cond","asNumber","len","data","length","indexOf","type","format","thismonth","parseInt","month","start","weekday","end","thisday","date","set","timeStart","split","timeEnd","console","log","thisdayUnit","day","nextThisday","lastThisday","condition","h1","m1","h2","m2","h","m","module","exports"],"mappings":"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","file":"typeDate.js","sourcesContent":["const moment = require('moment')\r\nconst typeDate = (value,unit,cond,asNumber) =>{\r\n    let len,data\r\n    if(value)\r\n        len = value.length\r\n    if(unit.indexOf(\"datetime\") !=-1){\r\n        if(unit.indexOf(\"morning_afternoon\") !=-1){\r\n            if (value[0] <= 6)\r\n                value[0] += 12\r\n            data = {\r\n                type: \"single\",\r\n                value: moment().format('ddd,DD-MM-YYYY')+\" \"+value[0]+\":00\",\r\n                unit: \"datetime\"\r\n            }\r\n\r\n        }\r\n        else{\r\n            data = {\r\n                type: \"single\",\r\n                value: moment().format('ddd,DD-MM-YYYY HH:mm'),\r\n                unit: unit\r\n            }\r\n        } \r\n    }\r\n    else if(cond==\"next\" && unit==\"month\"){\r\n        let thismonth = moment().format(\"M\")\r\n        if(len&&value[0]>1)\r\n            thismonth = (parseInt(thismonth)+parseInt(value[0])-1)\r\n        data = {\r\n            type: \"single\",\r\n            value: moment().month(parseInt(thismonth)).format(\"MMMM\"),\r\n            unit: unit\r\n        }\r\n    }\r\n    else if(cond==\"next\" && unit==\"week\"){\r\n        data = {\r\n            type: \"between\",\r\n            start:{\r\n                value: moment().weekday(7).format('ddd,DD-MM-YYYY'),\r\n                unit: unit\r\n            },\r\n            end:{\r\n                value: moment().weekday(7+6).format('ddd,DD-MM-YYYY'),\r\n                unit: unit\r\n            }\r\n        }\r\n    }\r\n    else if(cond==\"next\" && unit==\"day\"){\r\n        let thisday = moment().date()\r\n        data = {\r\n            type: \"single\",\r\n            value: moment().set('date', thisday+1).format('ddd,DD-MM-YYYY'),\r\n            unit: unit\r\n        }\r\n    }\r\n    else if(cond==\"last\" && unit==\"day\"){\r\n        let thisday = moment().date()\r\n        data = {\r\n            type: \"single\",\r\n            value: moment().set('date', thisday-1).format('ddd,DD-MM-YYYY'),\r\n            unit: unit\r\n        }\r\n    }\r\n    else if(cond==\"last\" && unit.indexOf(\"day\") != -1 && unit.indexOf(\"morning\") != -1){\r\n        let thisday = moment().date()\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: moment().set('date', thisday - 1).format('ddd,DD-MM-YYYY')+\" 6:00\",\r\n                unit: \"dateTime\"\r\n            },\r\n            end: {\r\n                value: moment().set('date', thisday - 1).format('ddd,DD-MM-YYYY')+\" 11:00\",\r\n                unit: \"dateTime\"\r\n            }\r\n        }\r\n    }\r\n    else if(len==2 && unit==\"day\"){\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: value[0],\r\n                unit: unit\r\n            },\r\n            end: {\r\n                value: value[1],\r\n                unit: unit\r\n            }\r\n        }\r\n    }\r\n    else if(len==2 && unit==\"time\"){\r\n        const timeStart = value[0].split(\".\")\r\n        const timeEnd = value[1].split(\".\")\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: moment().set('hour', timeStart[0]).set('minute', timeStart[1]).format(\"kk:mm\"),\r\n                unit: unit\r\n            },\r\n            end: {\r\n                value: moment().set('hour', timeEnd[0]).set('minute', timeEnd[1]).format(\"kk:mm\"),\r\n                unit: unit\r\n            }\r\n        }\r\n    }\r\n    else if(len==2 && unit.indexOf(\"month\") !=-1){\r\n        console.log(value[0],value[1],asNumber[0])\r\n        data = {\r\n            type: \"single\",\r\n            value: moment().set({'year': parseInt(value[1])-543, 'month': parseInt(asNumber[0])-1,'date':parseInt(value[0])}).format(\"ddd,DD-MM-YYYY\"),\r\n            unit: \"date\"\r\n        }\r\n    }\r\n    else if(len==2 && unit.length==2){\r\n        value[0] = parseInt(value[0])\r\n        value[1] = parseInt(value[1])\r\n        if(unit[0]==\"morning_afternoon\"){\r\n            if(value[0]<=6)\r\n                value[0]+=12\r\n        }\r\n        else if(unit[0] == \"evening\") \r\n            value[0]+=18\r\n\r\n        if(unit[1] == \"morning_afternoon\"){\r\n            if (value[1] <= 6)\r\n                value[1] += 12\r\n        }\r\n        else if(unit[1] == \"evening\") \r\n                value[1]+=18    \r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: moment().set('hour', value[0]).set('minute', 0).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            },\r\n            end: {\r\n                value: moment().set('hour', value[1]).set('minute', 0).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            }\r\n        }\r\n    }\r\n    else if(unit.length==2&&cond==\"to\"&&asNumber.length==2){  \r\n        asNumber[0] = parseInt(asNumber[0])\r\n        asNumber[1] = parseInt(asNumber[1])\r\n        if(unit[0]==\"morning_afternoon\"){\r\n            if(asNumber[0]<=6)\r\n            asNumber[0]+=12\r\n        }\r\n        else if(unit[0] == \"evening\") \r\n            asNumber[0]+=18\r\n\r\n        if(unit[1] == \"morning_afternoon\"){\r\n            if (asNumber[1] <= 6)\r\n            asNumber[1] += 12\r\n        }\r\n        else if(unit[1] == \"evening\") \r\n            asNumber[1]+=18\r\n            data = {\r\n                type: \"between\",\r\n                start: {\r\n                    value: moment().set('hour', asNumber[0]).set('minute', 0).format(\"kk:mm\"),\r\n                    unit: \"time\"\r\n                },\r\n                end: {\r\n                    value: moment().set('hour', asNumber[1]).set('minute', 0).format(\"kk:mm\"),\r\n                    unit: \"time\"\r\n                }\r\n            }\r\n    }\r\n    else if(cond==\"next\"){\r\n        let thisdayUnit = moment().day(unit)\r\n        let day = thisdayUnit.format(\"e\")\r\n        let nextThisday = moment().weekday(7+parseInt(day))\r\n        data = {\r\n            type: \"single\",\r\n            value: nextThisday.format('ddd,DD-MM-YYYY'),\r\n            unit: \"day\"\r\n        }\r\n    }\r\n    else if(cond==\"last\"){\r\n        let thisdayUnit = moment().day(unit)\r\n        let thisday = moment().day()\r\n        let day = thisdayUnit.format(\"e\")\r\n        let lastThisday = moment().weekday(parseInt(thisday)-parseInt(day))\r\n        data = {\r\n            type: \"single\",\r\n            value: lastThisday.format('ddd,DD-MM-YYYY'),\r\n            unit: \"day\"\r\n        }\r\n    }\r\n    else if(cond==\"this\"){\r\n        let thisdayUnit = moment().day(unit)\r\n        data = {\r\n            type: \"single\",\r\n            value: thisdayUnit.format('ddd,DD-MM-YYYY'),\r\n            unit: \"day\"\r\n        }\r\n    }\r\n    else if(cond==\"between\"){\r\n        if(value){\r\n            value[0] = (parseInt(value[0])+1)+''\r\n            value[1] = (parseInt(value[0])+8)+'' \r\n        }\r\n        else{\r\n            value = []\r\n            value[0] = \"2\"\r\n            value[1] = \"7\"\r\n        }\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: value[0],\r\n                unit: unit\r\n            },\r\n            end: {\r\n                value: value[1],\r\n                unit: unit\r\n            }\r\n        }\r\n    }\r\n    else if(cond==\"to\"&&asNumber.length==1){\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: moment().set('hour',1).set('minute', 0).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            },\r\n            end: {\r\n                value: moment().set('hour',parseInt(asNumber[0])).set('minute', 0).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            }\r\n        }\r\n    }\r\n    else if(unit==\"night\"&&cond==\"notless_than\"&&asNumber.length==1){  \r\n        data = {\r\n            type: \"condition\",\r\n            condition: cond[0],\r\n            value: moment().set('hour', parseInt(asNumber[0])).set('minute', 0).format(\"kk:mm\"),\r\n            unit: \"time\"\r\n        }\r\n    }\r\n    else if(cond==\"more_than\"&&!value){\r\n        data = {\r\n            type: \"condition\",\r\n            condition: cond,\r\n            value: \"1\",\r\n            unit: unit\r\n        }\r\n    }\r\n    else if(cond==\"more_than\"&&unit==\"morning_afternoon\"){\r\n        value[0] = parseInt(value[0])\r\n        if(value[0]<=6)\r\n            value[0]+=12\r\n        data = {\r\n            type: \"condition\",\r\n            condition: cond,\r\n            value: moment().set('hour',value[0]).set('minute', 0).format(\"kk:mm\"),\r\n            unit: unit\r\n        }\r\n    }\r\n    else if(len==3){\r\n        if(parseInt(value[2])/1000 <1)\r\n             value[2] = parseInt(value[2])+2000+''\r\n        data = {\r\n            type: \"single\",\r\n            value: moment(value[2]+\"-\"+value[1]+\"-\"+value[0]).format(\"ddd,DD-MM-YYYY\"),\r\n            unit: \"date\"\r\n        }\r\n    }\r\n    else if(len==4){\r\n        const h1 = parseInt(value[0])\r\n        const m1 = parseInt(value[1])\r\n        const h2 = parseInt(value[2])\r\n        const m2 = parseInt(value[3])\r\n        data = {\r\n            type: \"between\",\r\n            start: {\r\n                value: moment().set('hour',h1).set('minute', m1).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            },\r\n            end: {\r\n                value: moment().set('hour',h2).set('minute', m2).format(\"kk:mm\"),\r\n                unit: \"time\"\r\n            }\r\n        }\r\n    }\r\n    else if(len==2){\r\n        const h = parseInt(value[0])\r\n        const m = parseInt(value[1])\r\n        data = {\r\n            type: \"single\",\r\n            value: moment().set('hour',h).set('minute', m).format(\"kk:mm\"),\r\n            unit: \"time\"\r\n        }\r\n    }\r\n    return data\r\n}\r\n\r\nmodule.exports.typeDate= typeDate"]}